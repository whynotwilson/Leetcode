1.有序數列的 Two Sum 

167. Two Sum II - Input array is sorted (Easy)
input  一個由小到大排序好的陣列及一個target
output 陣列裡相加起來等於 target 的位置

ex: 
array=[2, 7, 9, 11], target=11
output [1,3]

解法
sum > target => 第二指針往左移讓 sum 變小
sum < target => 則相反

var twoSum = function(numbers, target) {
    let i = 0
    let j = numbers.length - 1
    
    while(target !== numbers[i] + numbers[j]){
        target > numbers[i] + numbers[j] ? i++ : j--
    }
    
    if(target === numbers[i] + numbers[j]) return [i+1 , j+1]
    else return null
};

----------------------------------------------------------------------------------------

2.兩數平方和

633. Sum of Square Numbers (Easy)

Example

Input: 5
Output: True
Explanation: 1 * 1 + 2 * 2 = 5

Input: 3
Output: False

var judgeSquareSum = function(c) {
    if(Math.sqrt(c)%1 === 0)
        return true
    let a = 1
    let b = Math.floor(Math.sqrt(c))
    while(a <= b) {
        total = a*a + b*b
        
        if(total > c) b--
        else if(total < c) a++
        else return true
    }
    
    return false
};

-----------------------------------------------------

3.反轉字符串中的母音字符

345. Reverse Vowels of a String (Easy)

Example
input s = "leetcode"
output    "leotcede"

var reverseVowels = function(s) {
    //if(s === null || s.length === 0) return false
    
    var vowels = 'aeiouAEIOU'
    var first = 0
    var end = s.length - 1
    var tem
    var result = s.split('')
    
    while(first < end){
        while(vowels.indexOf(result[first]) === -1 && first < end){
            first++
        }

        while(vowels.indexOf(result[end]) === -1 && first < end){
            end--
        }
        
        if(first < end){
            tem = result[first]
            result[first] = result[end]
            result[end] = tem
        }

        first++
        end--
    }
    
    return result.join('')
};

4.回文字符串

680. Valid Palindrome II

example
Input: "abca"
Output: True
Explanation: You could delete the character 'c'.


var validPalindrome = function(s, counter = 1) {
    let low = 0
    let high = s.length-1

    while(low < high){
        if(s[low] === s[high]){
            low++
            high--
            continue
        }
        if(counter === 0)
            return false
        return (validPalindrome(s.slice(low, high), 0) || validPalindrome(s.slice(low+1, high+1), 0))
    } 
    return true
}


-------------------------------------------------------------------------------------------------------------

5. 歸併兩個有序數組

88. Merge Sorted Array (Easy)

example
Input:
nums1 = [1,2,3,0,0,0], m = 3
nums2 = [2,5,6], n = 3

Output: [1,2,2,3,5,6]

var merge = function(nums1, m, nums2, n) {
    var len = m + n;
    m--;
    n--;
    while (len--) {
        if (n < 0 || nums1[m] > nums2[n]) {
            nums1[len] = nums1[m--];
        } else {
            nums1[len] = nums2[n--];
        }
    }
};
